<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
		<!-- ===============================配置Handler处理器   start=============================== -->
		
		<!-- 对于注解的Handler可以单个配置,实际开发中建议使用组件扫描-->
		<!-- <bean class="cn.itcast.ssm.controller.ItemsController" /> -->
			<!--组件扫描   可以扫描controller、service、...这里让扫描controller，指定controller的包-->
		<context:component-scan base-package="com.alumna.controller"></context:component-scan>
		
		
		
		<!-- ===============================配置Handler  end ===============================-->
		
		
		
		
		
		<!-- =============================== 配置处理器映射器start============================================================
			处理器映射器 将bean的name作为url进行查找 ，需要在配置Handler时指定beanname（就是url） 
			1.所有的映射器都实现 HandlerMapping接口。
		 -->
				<!--3.注解处理器映射器 -->
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
		
		<!-- ===============================配置处理器映射器end============================================================   -->
			
			
			
			
			
			
		<!-- ===============================配置处理器适配器     start============================================================   -->
	
		<!--注解处理器适配器 -->
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		 	<property name="messageConverters">
				<list>
					<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
				</list>
			</property>
		 </bean>
		<!-- ===============================配置处理器适配器     end============================================================   -->
		
		
		
		
		<!--注解驱动   使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
			mvc:annotation-driven默认加载很多的参数绑定方法，
			比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
			实际开发时使用mvc:annotation-driven
			conversion-service:注入自定义参数绑定
	 	-->
		<!-- <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>-->		
		<!-- 自定义参数绑定 -->
		<!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
			转换器
			<property name="converters">
				<list>
					日期类型转换
					<bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"/>
				</list>
			</property>
		</bean> -->
		<!-- 文件上传 -->
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<!-- 设置上传文件的最大尺寸为5MB -->
			<property name="maxUploadSize">
				<value>5242880</value>
			</property>
		</bean>
		
		
		<!-- ===============================配置视图解析器   start=============================== -->
		<!-- 视图解析器
		 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
		 -->
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<!-- 配置jsp路径的前缀 -->
			<property name="prefix" value="/"/>
			<!-- 配置jsp路径的后缀 -->
			<property name="suffix" value=".jsp"/>
		</bean>
		
		<!-- ===============================配置视图解析器   end=============================== -->
		
		
		
		
</beans>